<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hosts | hSATAC]]></title>
  <link href="http://blog.hsatac.net/categories/hosts/atom.xml" rel="self"/>
  <link href="http://blog.hsatac.net/"/>
  <updated>2012-08-09T21:39:34+08:00</updated>
  <id>http://blog.hsatac.net/</id>
  <author>
    <name><![CDATA[hSATAC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[動態產生 ec2 的 hosts 檔案]]></title>
    <link href="http://blog.hsatac.net/2012/06/generate-aws-ec2-hosts-file/"/>
    <updated>2012-06-07T11:43:00+08:00</updated>
    <id>http://blog.hsatac.net/2012/06/generate-aws-ec2-hosts-file</id>
    <content type="html"><![CDATA[<p>這個議題類似上一篇 <a href="http://blog.hsatac.net/2012/06/aws-ec2-setup-dynamic-dns-using-route-53/">利用 Route 53 設定 Ec2 動態 DNS</a> ，同樣也是要解決主機名稱對應浮動 ip 的問題。</p>

<p>雖然現在用完整域名已經可以對應到 ip ，但是還是有很多時候我們的主機需要知道主機名稱和 ip 的對應。</p>

<p>這個問題大概也是可以用 hosts 或 dns 來解決，不過由於我已經把 yp nis 架設起來，其他機器可以直接吃 nis 伺服器的 hosts 檔案，所以決定用 hosts 這個方式來處理。</p>

<p>概念很簡單，利用 ec2 api sdk 抓取正在運行的主機列表，一一寫入 /etc/hosts 後再重新 make yp 的資料庫。</p>

<p>設個排程每個小時跑一下或開新機器時手動執行一下即可。</p>

<p>script 如下：</p>

<p><div><script src='https://gist.github.com/2881131.js?file='></script>
<noscript><pre><code>#!/usr/bin/env ruby
# coding: utf-8
require 'rubygems'
require 'aws-sdk'

config = {:access_key_id =&gt; '',
          :secret_access_key =&gt; ''}
AWS.config(config)
ec2 = AWS::EC2.new
ec2 = ec2.regions['ap-northeast-1']

hosts = []
hosts &lt;&lt; &quot;127.0.0.1\tlocalhost localhost.localdomain&quot;
ec2.instances.each do |instance|
  next unless instance.status == :running
  tags = instance.tags.to_h
  hosts &lt;&lt; &quot;#{instance.private_ip_address}\t#{tags[&quot;Name&quot;]}&quot;
end

`cp -p /etc/hosts /etc/hosts.bak`
open(&quot;/etc/hosts.new&quot;, &quot;w&quot;) {|f| f.write hosts.join(&quot;\n&quot;)+&quot;\n&quot;}
is_same = system(&quot;diff -q /etc/hosts.new /etc/hosts &gt; /dev/null 2&gt;/dev/null&quot;)
unless is_same
  `cp -p /etc/hosts.new /etc/hosts`
end</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
