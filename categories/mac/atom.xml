<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mac | hSATAC]]></title>
  <link href="http://blog.hsatac.net/categories/mac/atom.xml" rel="self"/>
  <link href="http://blog.hsatac.net/"/>
  <updated>2014-02-09T21:57:24+08:00</updated>
  <id>http://blog.hsatac.net/</id>
  <author>
    <name><![CDATA[Ash Wu]]></name>
    <email><![CDATA[hsatac@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2010 MBP 升級 SSD 與 Fusion Drive]]></title>
    <link href="http://blog.hsatac.net/2012/11/macbook-pro-2010-mid-replace-optical-drive-with-ssd-and-fusion-drive/"/>
    <updated>2012-11-26T15:15:00+08:00</updated>
    <id>http://blog.hsatac.net/2012/11/macbook-pro-2010-mid-replace-optical-drive-with-ssd-and-fusion-drive</id>
    <content type="html"><![CDATA[<p>我現在用來開發 iOS 的電腦是公司提供的一台 Macbook Pro 13" 2010 mid 4G ram。使用上還算堪用，但時不時的 lag 以及 freeze 實在非常挑戰開發者的耐心。尤其當我 Xcode 開著，git 切換 branch 然後 Xcode 重新 index 的時候簡直慘不忍睹。</p>

<p>畢竟電腦還是自己在用，開心順手最重要，所以決定自己投資一點下去升級。因為光碟機很少在用，所以查了一下以前看過的硬碟轉接托架，意外發現非常便宜才 200 多元，還附拆機工具組。參考<a href="http://blog.lyhdev.com/2012/10/apple-macbook-pro-ssd.html">玩物喪誌</a>的心得一樣購買 Jeyi 的硬碟托架以及 Micron M4 7mm 超薄 SSD。別人踩過一次的雷就不用再踩了。</p>

<p>把光碟機拆下，原本的位置裝上 SSD。內裝的硬碟則不動。如果把內裝硬碟裝在硬碟托架的話硬碟的感震偵測會無法作用。拆機安裝部分參考 <a href="http://www.ifixit.com/Guide/MacBook+Pro+13-Inch+Unibody+Mid+2010+Optical+Drive+Replacement/4318/">ifixit</a> 的說明。最需要注意的是螺絲不要滑牙了。</p>

<p>在拆機的過程中也順便把家裡的 Mac mini server 8G 出包版的記憶體拆下與 MBP 的 4G 對調，兩組都是 DDR 3 1066 的規格，對換毫無困難。</p>

<p>裝上以後開機確認是否有抓到及辨識到 SSD 固態硬碟，link speed 也跑到 SATA II 全速。接著使用 Carbon Copy Cloner 先把原本的系統碟備份到外接 USB 硬碟。再改用 USB 硬碟開機，準備做 Fusion Drive。</p>

<p>會使用 Fusion Drive 的原因是 SSD 實在不夠大，原本要自己安排哪些目錄放 SSD，哪些少用放 HD ，但是使用 Fusion Drive 技術的話可以將 SSD 與 HD 變成一顆邏輯磁碟，而系統會自己幫你判斷哪些常用的檔案放在 SSD, 不常用的則移去 HD ，兼顧了速度與容量和便利性，似乎是個不錯的選擇，所以決定試試看。</p>

<p>參考 <a href="http://jollyjinx.tumblr.com/post/34638496292/fusion-drive-on-older-macs-yes-since-apple-has">Fusion drive on older Macs? YES!</a> 的說明做好 Fusion Drive，再用 Carbon Copy Cloner 把外接 USB 硬碟的資料複製回做好的 Fusion Drive。值得一提的是 Fusion Drive 似乎無法製作 Recovery Partition，這部份只好無視他的 warning 。</p>

<p>最後把 Fusion Drive 設為開機碟重開就完成了這次的升級。相關照片和紀錄都放在 <a href="http://www.facebook.com/media/set/?set=a.4857081506317.2196205.1275503618&amp;type=1&amp;l=bb8d23d675">Facebook 相簿</a> 中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 4.3 publish ipa for testflight]]></title>
    <link href="http://blog.hsatac.net/2012/03/xcode-4-dot-3-publish-ipa-for-testflight/"/>
    <updated>2012-03-07T10:05:00+08:00</updated>
    <id>http://blog.hsatac.net/2012/03/xcode-4-dot-3-publish-ipa-for-testflight</id>
    <content type="html"><![CDATA[<p>這兩天在研究 testflight 碰到了一點 Xcode 4.3 的小雷，記錄一下。</p>

<p>按照 testflight 的教學上傳 ipa 檔，一直出現 <code>mismatched-ubiquitykvstore-identifier-value</code> 的錯誤，但是憑證已經確認多次，肯定沒有問題。</p>

<p>翻了一下應該是 APP ID enable iCloud 的問題，但是不能 disable 掉的狀況，只好自己去 entitlement 補上需要的參數。</p>

<p>Xcode 4.3 的 entitlement 換地方了。</p>

<ul>
<li>請到 target 的 summary tab 拉到最底下找到 entitlement 區塊，勾選 <code>enable Entitlement</code>。</li>
<li><code>iCloud key-value Store</code> 這個欄位填上 <code>.*</code></li>
<li><code>iCloud Container</code> 這個部分自己加一個值 <code>.*</code></li>
</ul>


<p>存檔後你的專案就會多一個 <code>專案名.entitlements</code> 的檔案，打開確認一下內容是否有</p>

<p>```
<key>com.apple.developer.ubiquity-container-identifiers</key>
 <array></p>

<pre><code> &lt;string&gt;$(TeamIdentifierPrefix).*&lt;/string&gt;
</code></pre>

<p> </array>
 <key>com.apple.developer.ubiquity-kvstore-identifier</key>
 <string>$(TeamIdentifierPrefix).*</string>
```</p>

<p>再做 Archive, Share 成 ipa 檔上傳就可以了。</p>

<p><em>2012/04/42 補充</em></p>

<p>用 .* 的 key 送審 AppStore 時會被 reject，請設成跟你的 bundle identifier 一樣即可。</p>

<p>也就是：</p>

<p>```
<key>com.apple.developer.ubiquity-container-identifiers</key>
 <array></p>

<pre><code> &lt;string&gt;$(TeamIdentifierPrefix)com.yourcompany.coolapp&lt;/string&gt;
</code></pre>

<p> </array>
 <key>com.apple.developer.ubiquity-kvstore-identifier</key>
 <string>$(TeamIdentifierPrefix)com.yourcompany.coolapp</string>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[整合 Redmine 和 git]]></title>
    <link href="http://blog.hsatac.net/2011/04/redmine-git-integration/"/>
    <updated>2011-04-14T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/04/redmine-git-integration</id>
    <content type="html"><![CDATA[<p>其實就是[專案設定] > [版本控管] 裡面填 git repo path 而已<br />
不過一直報找不到專案，看了一下 error log  原來是找不到 git 執行檔<br />
解法很簡單，原本 httpd.conf 設定的 ruby 要再包一層去 export path<br />
例如原本你設定的是
<pre lang="bash">
PassengerRuby /usr/local/Cellar/ruby-enterprise-edition/2011.03/bin/ruby
</pre></p>




<p>就開一個  /usr/local/bin/ruby_with_env 的可執行檔<br />
裡面把 export $PATH
<pre lang="bash">
#!/bin/bash
export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:/opt/local/bin:/usr/local/git/bin:/usr/local/git/bin/:$PATH"
/usr/local/Cellar/ruby-enterprise-edition/2011.03/bin/ruby $*
</pre></p>




<p>再把 httpd.conf 的裡面設定的 ruby 改成
<pre lang="bash">
PassengerRuby /usr/local/bin/ruby_with_env
</pre></p>




<p>大功告成！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[連猴子也會之：在 Mac mini server 上架設 WebDAV git server]]></title>
    <link href="http://blog.hsatac.net/2011/04/%E9%80%A3%E7%8C%B4%E5%AD%90%E4%B9%9F%E6%9C%83%E4%B9%8B%EF%BC%9A%E5%9C%A8-mac-mini-server-%E4%B8%8A%E6%9E%B6%E8%A8%AD-webdav-git-server/"/>
    <updated>2011-04-04T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/04/連猴子也會之：在-mac-mini-server-上架設-webdav-git-server</id>
    <content type="html"><![CDATA[<p>因為我的 mac mini server 不想開著 ssh 一直給人掃，所以想設定 https 的 git server，試了一下真的超簡單的。
<p style="text-align: center;"><a href="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.47.38.png"><img class="aligncenter size-full wp-image-360" title="螢幕快照 2011-04-04 下午1.47.38" src="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.47.38.png" alt="" width="522" height="312" /></a></p>
▲首先打開你的 Server Admin 建立一個新 Site 例如 repo.hsatac.net
<!--more--></p>




<p><p style="text-align: center;"><a href="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.48.24.jpg"><img class="aligncenter size-full wp-image-371" title="螢幕快照 2011-04-04 下午1.48.24" src="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.48.24.jpg" alt="" width="523" height="307" /></a></p>
▲Option 的部份把 WebDAV 打勾，我們要用這個做認證，Folding Listing 也勾起來比較方便。
<p style="text-align: center;"><a href="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.49.02.jpg"><img class="aligncenter size-full wp-image-372" title="螢幕快照 2011-04-04 下午1.49.02" src="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.49.02.jpg" alt="" width="332" height="162" /></a></p>
▲接著建立一個新的 Realm ，範例就用 project.git
<p style="text-align: center;"><a href="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.49.51.jpg"><img class="aligncenter size-full wp-image-373" title="螢幕快照 2011-04-04 下午1.49.51" src="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.49.51.jpg" alt="" width="522" height="288" /></a></p>
▲按+號把你的使用者拖過來，給他權限 Browse and Read/Write WebDAV，</p>




<p>當然如果你要公開這個 repo 給別人讀取，可以把 everyone 的權限設成 Browse and Read
<p style="text-align: center;"><a href="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.50.20.jpg"><img class="aligncenter size-full wp-image-374" title="螢幕快照 2011-04-04 下午1.50.20" src="http://blog.hsatac.net/images/wp-uploads/2011/04/螢幕快照-2011-04-04-下午1.50.20.jpg" alt="" width="521" height="310" /></a></p>
▲最後在 Security 的部份 把 SSL 打勾並選你的憑證</p>




<p>接著就來設定 remote repo 吧！<br />
把你剛剛設定的目錄建立起來
<pre lang="bash">mkdir /Library/WebServer/Documents/repo/project.git
cd /Library/WebServer/Documents/repo/project.git
git init --bare
mv hooks/post-update.sample hooks/post-update
git update-server-info</pre>
記得整個目錄的owner要改回 _www</p>




<p>遠端這樣就設定好啦！<br />
接著本地端的部份：</p>




<p>因為我們是走 https ，如果你的憑證是自簽的話，請先跟我這樣做：
<pre lang="bash">git config --global http.sslVerify false</pre>
接著一樣三步驟：
<pre lang="bash">git init
git add .
git commit -m "first commit"
git remote add origin https://repo.hsatac.net/project.git/
git push origin master --force -v</pre>
最後編輯 .git/config<br />
加上
<pre lang="bash">[branch "master"]
     remote = origin
     merge = refs/heads/master</pre></p>




<p>以上，就大功告成啦！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transmission X Dropbox X Mac mini server = 動物機]]></title>
    <link href="http://blog.hsatac.net/2010/08/transmission-x-dropbox-x-mac-mini-server-%E5%8B%95%E7%89%A9%E6%A9%9F/"/>
    <updated>2010-08-27T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2010/08/transmission-x-dropbox-x-mac-mini-server-動物機</id>
    <content type="html"><![CDATA[<p>今天繼續 Mac mini server 的探索…</p>




<p>今天的目標是開啟Mac mini server的動物機模式!有這麼大的儲存空間，當然要好好利用。</p>




<p><a href="http://blog.hsatac.net/images/wp-uploads/2010/08/Screenshot20100826at11.34.14PM1.png"><img style="display: inline; border: 0px;" title="Screen shot 2010-08-26 at 11.34.14 PM" src="http://blog.hsatac.net/images/wp-uploads/2010/08/Screenshot20100826at11.34.14PM_thumb1.png" border="0" alt="Screen shot 2010-08-26 at 11.34.14 PM" width="260" height="170" /></a></p>




<p>原本的想法是自己寫一個shell script或AppleScript再搭配Web介面來遠端操作BT，這樣就算在辦公室，也能上傳種子，控制mac下載，回家後就可以享受成果了。</p>




<p>搜尋Mac Bt的結果，第一個就是<a href="http://www.transmissionbt.com/" target="_blank">Transmission</a>，他帶給了我大大的驚奇。</p>




<p><!--more-->下載dmg安裝後打開，發現他居然內置了web介面！使用上也非常簡單，打勾選取就可以了，記得firewall要把9091 port打開。試用了一下相當滿意。</p>




<p><a href="http://blog.hsatac.net/images/wp-uploads/2010/08/Screenshot20100826at11.33.28PM1.png"><img style="display: inline; border: 0px;" title="Screen shot 2010-08-26 at 11.33.28 PM" src="http://blog.hsatac.net/images/wp-uploads/2010/08/Screenshot20100826at11.33.28PM_thumb1.png" border="0" alt="Screen shot 2010-08-26 at 11.33.28 PM" width="260" height="252" /></a></p>




<p>不過後來又逛了一下偏好設定，裡面有些功能，搭配dropbox會比使用web UI來的更好用！(其實是不想為server多開一個port…)</p>




<p><a href="http://blog.hsatac.net/images/wp-uploads/2010/08/Screenshot20100826at11.42.07PM1.png"><img style="display: inline; border: 0px;" title="Screen shot 2010-08-26 at 11.42.07 PM" src="http://blog.hsatac.net/images/wp-uploads/2010/08/Screenshot20100826at11.42.07PM_thumb1.png" border="0" alt="Screen shot 2010-08-26 at 11.42.07 PM" width="260" height="201" /></a></p>




<p>首先先把最下面的Audo add: Watch for torrent files in 打勾，並且設定在你的dropbox中的某個資料夾，例如我是設定在 Dropbox/bt種子/ 下面。這樣不管你是在辦公室還是其他電腦，只要把要抓的bt種子檔丟到這個目錄下，mac端dropbox同步後Transmission偵測到就會自動加入這個種子檔了！</p>




<p>再來還有幾個設定要勾選，把Add window:下的Only when adding manually打勾，這樣偵測到新種子檔的時候就不會跳出確認視窗，而會自動加入並開始傳輸。</p>




<p>還有一個很重要的設定，最上方的Default location記得改掉，原本預設是和種子同個目錄，如此一來你抓下來的東西就會統統同步到dropbox啦！記得改個設定，我改到Mac上的一個共享資料夾，這樣抓好後全家都可以直接存取到。Keep incomplete files in也記得調整，不然還沒下載完的暫存檔也是會都同步到dropbox。</p>




<p>模擬使用情境：上班時認真蒐集資訊！看到一份重要的檔案要抓時怎麼辦呢？只要把種子檔丟進dropbox裡面的種子目錄，回家後抓好的檔案就在等著你啦！</p>




<p>Transmission也有android端的軟體，有空時再來試試看。</p>

]]></content>
  </entry>
  
</feed>
