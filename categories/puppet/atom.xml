<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: puppet | hSATAC]]></title>
  <link href="http://blog.hsatac.net/categories/puppet/atom.xml" rel="self"/>
  <link href="http://blog.hsatac.net/"/>
  <updated>2013-02-21T14:20:07+08:00</updated>
  <id>http://blog.hsatac.net/</id>
  <author>
    <name><![CDATA[hSATAC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ArchLinux 使用 Puppet 注意事項]]></title>
    <link href="http://blog.hsatac.net/2013/02/using-puppet-on-archlinux/"/>
    <updated>2013-02-21T14:12:00+08:00</updated>
    <id>http://blog.hsatac.net/2013/02/using-puppet-on-archlinux</id>
    <content type="html"><![CDATA[<p>想在 ArchLinux 使用 Puppet 有一些需要注意的地方，在這邊順便補充一下。</p>

<h2>systemctl 路徑</h2>

<p>Arch 在之前的改版已經把 <code>/bin/systemctl</code> 移到 <code>/usr/bin/systemctl</code> 下，但 Puppet 還是抓 <code>/usr/systemctl</code> 導致找不到 systemd 這個 provider ，這個問題已經在 Puppet 3.1 修改，也可以自己手動 link 一下。</p>

<h2>套件庫需更新到最新版</h2>

<p>Arch 每次都要先 <code>pacman -Syy</code> 一下不然 package 會無法使用。</p>

<p>以上這兩個問題我有寫了一段 module</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>For Archlinux. This issue will be fixed in puppet 3.1&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>class archfix {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>file {'/bin/systemctl':
</span><span class='line'>    ensure =&gt; link,
</span><span class='line'>    target =&gt; '/usr/bin/systemctl',
</span><span class='line'>}   
</span><span class='line'>exec {'pacman -Syy':
</span><span class='line'>    path =&gt; ["/usr/bin"]
</span><span class='line'>}   
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在 manifest 中利用 stage 功能先執行 archfix 這個 module 就可以了。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node 'devm3' {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>stage { 'pre': }
</span><span class='line'>class {
</span><span class='line'>    "archfix": stage =&gt; "pre"; 
</span><span class='line'>}   
</span><span class='line'>Stage["pre"] -&gt; Stage["main"]
</span><span class='line'>
</span><span class='line'># include other modules...
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Openrc &amp; Systemd</h2>

<p>ArchLinux 現在還有很多套件同時支援 openrc 的 initscript 和 systemd，Puppet 會偵測到兩個 provider 但是他會選擇用 initscript 。可以在 service resource 指定 <code>provider =&gt; systemd</code> 即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Puppet 快速佈署 Archlinux]]></title>
    <link href="http://blog.hsatac.net/2013/02/bootstrap-archlinux-with-puppet/"/>
    <updated>2013-02-19T17:51:00+08:00</updated>
    <id>http://blog.hsatac.net/2013/02/bootstrap-archlinux-with-puppet</id>
    <content type="html"><![CDATA[<p>筆記一下安裝步驟...。</p>

<h2>Install Archlinux</h2>

<p>由於 Archlinux 本身沒有提供方便的安裝模式、因此我們使用 <a href="https://twitter.com/helmuthdu">@helmuthdu</a> 的快速安裝 script <a href="https://github.com/helmuthdu/aui">AUI</a>，安裝完成後再使用 puppet bootstrap 環境</p>

<ul>
<li>放入 CD 選擇 x64_64 開機</li>
<li>執行 <code>curl hsatac.net/getaui | sh</code></li>
<li>進入 helmuthdu-aui-xxxx 目錄</li>
<li>執行 <code>./aui --ais</code> 進入安裝程式</li>
<li>輸入 1-14 執行全部安裝步驟</li>
</ul>


<p>ps. 如遇特定機種無法使用 grub2 可改用 syslinux bootloader</p>

<h2>Reboot</h2>

<p>安裝完成重開機後後首先設定讓網路能通
可參考<a href="https://wiki.archlinux.org/index.php/Network_Configuration">官方wiki</a></p>

<p>如欲使用 dhcp 可執行 <code>systemctl start dhcpcd</code>
<code>systemctl enable dhcpcd</code> 開機自動執行</p>

<ul>
<li>回到 helmuthdu-aui-xxx 目錄</li>
<li>執行 <code>./aui</code> 繼續安裝</li>
<li>新增使用者步驟必須執行，因後續步驟需用 sudo</li>
<li>AUR helper 選擇 yaourt
(Yaourt 和 packer 大同小異，但因 puppet 使用 yaourt 所以改用。)</li>
<li>後面的 setup 可跳過，或者裝 Basic Setup 即可，這邊都是 桌面環境相關</li>
<li>設定 /etc/resolv.conf</li>
</ul>


<h2>使用 puppet</h2>

<p>puppet 可使用 master-agent 架構或者單機(solo) 安裝，詳見 puppet wiki</p>

<ul>
<li><code>yaourt puppet</code> 安裝 puppet</li>
<li>在 /etc/hosts 設定 puppet master hostname 並在 /etc/puppet/puppet.conf [agent] 區塊設定 <code>server = xxx</code> (hostname 要跟 master hostname 一樣不然憑證不會過)</li>
<li>run <code>puppet agent --test</code> 會出現沒有憑證訊息</li>
<li>回到 puppet master 執行 <code>puppet cert list</code> 會看到待簽署的憑證</li>
<li>執行 <code>puppet cert sign [hostname]</code> 簽署</li>
<li>記得在 master 的 /etc/puppet/manifests/site.pp 設定新的 node 定義</li>
<li>回到 agent 執行 <code>puppet agent --test</code> 進行安裝</li>
</ul>

]]></content>
  </entry>
  
</feed>
