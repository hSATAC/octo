<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | hSATAC]]></title>
  <link href="http://blog.hsatac.net/categories/rails/atom.xml" rel="self"/>
  <link href="http://blog.hsatac.net/"/>
  <updated>2012-10-21T11:26:35+08:00</updated>
  <id>http://blog.hsatac.net/</id>
  <author>
    <name><![CDATA[hSATAC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Redmine + Bundler 復活記]]></title>
    <link href="http://blog.hsatac.net/2011/09/redmine-bundler-%E5%BE%A9%E6%B4%BB%E8%A8%98/"/>
    <updated>2011-09-30T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/09/redmine-bundler-復活記</id>
    <content type="html"><![CDATA[<p>老實說，不記得之前是動了什麼，總之我的佈署 apache + passenger + ree 環境<br />
redmine 爆炸了。推測應該是 gem 的關係。<br />
上網看了一下， rails 2.3 只支援 rubygems 1.7<br />
就先把 rubygems downgrade 回來
<pre lang="bash">gem update --system 1.7</pre></p>




<p>和 tkalu, xdite, ihower, 以及小蟹詢問了各種可能的解決方案後<br />
確定我應該是要用 bundler 來管理一下 redmine 的 gems</p>




<p>根據 ihower 提供的資訊， redmine 有一個內建 bundler 的 fork 版<br />
搜尋了一下找到了 https://www.chiliproject.org/<br />
把他的 <a href="https://github.com/chiliproject/chiliproject/blob/unstable/Gemfile" target="_blank">Gemfile</a> 借過來一用</p>




<p>再按照 <a href="http://gembundler.com/rails23.html" target="_blank">Bundler 官網上的 Rails 2 教學</a>
來設定，果然成功把我的 redmine 救了回來！</p>




<p>chiliproject 的 Gemfile 可能要稍加修改，例如他用 rails 2.3.14，可以改成 redmine 官網支援的 2.3.11<br />
然後一些沒用到的 gem 例如 pg 可以移除。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rake 0.9 爆炸解法]]></title>
    <link href="http://blog.hsatac.net/2011/09/rake-0-9/"/>
    <updated>2011-09-20T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/09/rake-0-9</id>
    <content type="html"><![CDATA[<p>由於 rake 0.9 跟之前的不相容，因此裝了以後大概都會碰到這堆錯誤：
<pre lang="bash">/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/version.rb:4: warning: already initialized constant MAJOR
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/version.rb:5: warning: already initialized constant MINOR
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/version.rb:6: warning: already initialized constant BUILD
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/version.rb:3: warning: already initialized constant NUMBERS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/version.rb:9: warning: already initialized constant VERSION
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake.rb:26: warning: already initialized constant RAKEVERSION
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/early_time.rb:17: warning: already initialized constant EARLY
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/alt_system.rb:32: warning: already initialized constant WINDOWS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/application.rb:28: warning: already initialized constant DEFAULT_RAKEFILES
WARNING: Possible conflict with Rake extension: String#ext already exists
WARNING: Possible conflict with Rake extension: String#pathmap already exists
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/task_arguments.rb:73: warning: already initialized constant EMPTY_TASK_ARGS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/invocation_chain.rb:49: warning: already initialized constant EMPTY
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_utils.rb:10: warning: already initialized constant RUBY
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_utils.rb:84: warning: already initialized constant LN_SUPPORTED
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/dsl_definition.rb:143: warning: already initialized constant Commands
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:44: warning: already initialized constant ARRAY_METHODS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:47: warning: already initialized constant MUST_DEFINE
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:51: warning: already initialized constant MUST_NOT_DEFINE
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:55: warning: already initialized constant SPECIAL_RETURN
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:61: warning: already initialized constant DELEGATING_METHODS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:364: warning: already initialized constant DEFAULT_IGNORE_PATTERNS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/file_list.rb:370: warning: already initialized constant DEFAULT_IGNORE_PROCS
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake.rb:64: warning: already initialized constant FileList
/Users/cat/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake.rb:65: warning: already initialized constant RakeFileUtils
rake aborted!
stack level too deep</pre></p>




<p>(See full trace by running task with --trace)
<!--more--></p>




<p>解決的方法很簡單，你知道、我知道、獨眼龍也知道：就是 bundle exec rake</p>




<p>但是一直打一直打實在很煩。寫 Ruby 的時候，當你開始覺得有重複的打字作業的時候，就表示事情不太對勁了......</p>




<p>那該怎麼辦呢？<del>你怎麼不問問神奇海螺呢？</del></p>




<p>Google 了一下，發現 <a href="http://ihower.tw/blog/archives/5762" target="_blank">ihower 的這個解法</a>不錯。</p>




<p>簡單說，在你的目錄下先下
<pre lang="bash">bundle install --binstubs</pre>
這個指令會把 Gemfile 裡面的執行檔安裝在專案目錄的 bin 目錄下面。</p>




<p>接著在專案目錄開一個 .rvmrc 裡面填
<pre lang="bash">export PATH="./bin:$PATH"</pre>
這樣當你執行 rake 的時候 rvm 就會幫你抓到專案目錄下的 bin 下的 rake 執行檔了！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[整合 Redmine 和 git]]></title>
    <link href="http://blog.hsatac.net/2011/04/redmine-git-integration/"/>
    <updated>2011-04-14T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/04/redmine-git-integration</id>
    <content type="html"><![CDATA[<p>其實就是[專案設定] > [版本控管] 裡面填 git repo path 而已<br />
不過一直報找不到專案，看了一下 error log  原來是找不到 git 執行檔<br />
解法很簡單，原本 httpd.conf 設定的 ruby 要再包一層去 export path<br />
例如原本你設定的是
<pre lang="bash">
PassengerRuby /usr/local/Cellar/ruby-enterprise-edition/2011.03/bin/ruby
</pre></p>




<p>就開一個  /usr/local/bin/ruby_with_env 的可執行檔<br />
裡面把 export $PATH
<pre lang="bash">
#!/bin/bash
export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:/opt/local/bin:/usr/local/git/bin:/usr/local/git/bin/:$PATH"
/usr/local/Cellar/ruby-enterprise-edition/2011.03/bin/ruby $*
</pre></p>




<p>再把 httpd.conf 的裡面設定的 ruby 改成
<pre lang="bash">
PassengerRuby /usr/local/bin/ruby_with_env
</pre></p>




<p>大功告成！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Passenger(mod_rails) 部屬 Sinatra]]></title>
    <link href="http://blog.hsatac.net/2011/02/%E7%94%A8-passengermod_rails-%E9%83%A8%E5%B1%AC-sinatra/"/>
    <updated>2011-02-22T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/02/用-passengermod_rails-部屬-sinatra</id>
    <content type="html"><![CDATA[<p>最近寫了一些小 app / web service ，因為用不到 rails 那樣的大架構和功能，於是嘗試了 sinatra。<br />
寫起來挺快得，感覺跟之前玩 node.js 的感覺有點像。<br />
部屬方面也很容易<br />
在你的專案目錄下新建一個 config.ru 檔案，以及 public 和 tmp 資料夾<br />
config.ru 檔案內容為
<pre lang="ruby">
require 'project'</pre></p>




<p>root_dir = File.dirname(__FILE__)</p>




<p>set :environment, ENV['RACK_ENV'].to_sym<br />
set :root,        root_dir<br />
set :app_file,    File.join(root_dir, 'project.rb')<br />
disable :run</p>




<p>run Sinatra::Application</p>




<p>
把 project 替換成你的專案名稱<br />
apache vhost的設法和 rails 的一樣即可
<pre lang="bash">
<VirtualHost *:80>
  ServerName project.hsatac.net
  DocumentRoot "/project/public"
  RackEnv production
  <Directory "/project/public">
    Order allow,deny
    Allow from all
  

</pre></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OSX Server 10.6 安裝 mysql2 gem]]></title>
    <link href="http://blog.hsatac.net/2011/02/mac-osx-server-10-6-%E5%AE%89%E8%A3%9D-mysql2-gem/"/>
    <updated>2011-02-22T00:00:00+08:00</updated>
    <id>http://blog.hsatac.net/2011/02/mac-osx-server-10-6-安裝-mysql2-gem</id>
    <content type="html"><![CDATA[<p>想當初因為 mac osx server 已經內建 mysql ，所以就沒有完全照 xdite 大神和 ihower 大神的環境安裝 best practice 走<br />
下場就是真的踩到很多地雷，真的是不聽老人言，吃虧在眼前。 mysql2 這個雷真的踩的很痛，然後 rvm 真的是好東西，別省這點時間。</p>




<p>言歸正傳，當你安裝 mysql2 gem 時碰到這個錯誤訊息：
<pre lang="bash">
EBuilding native extensions.  This could take a while...
ERROR:  Error installing mysql2:
    ERROR: Failed to build gem native extension.</pre></p>




<p>/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby extconf.rb<br />
checking for rb_thread_blocking_region()... no<br />
checking for mysql.h... no<br />
checking for mysql/mysql.h... no<br />
-----<br />
mysql.h is missing.  please check your installation of mysql and try again.<br />
-----
</p>




<p>請下：
<pre lang="bash">
env ARCHFLAGS="-arch x86_64" gem install mysql2 -- --with-mysql-config=/usr/local/mysql/bin/mysql_config
</pre></p>




<p>這樣應該就可以正常編譯了。(不過因為我為了解這個雷自己亂改過很多東西，所以我也不太確定，歡迎留言討論。)</p>

]]></content>
  </entry>
  
</feed>
