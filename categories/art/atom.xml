<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Art | hSATAC]]></title>
  <link href="http://blog.hsatac.net/categories/art/atom.xml" rel="self"/>
  <link href="http://blog.hsatac.net/"/>
  <updated>2013-08-09T10:40:48+08:00</updated>
  <id>http://blog.hsatac.net/</id>
  <author>
    <name><![CDATA[hSATAC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Art of Readable Code 讀書筆記]]></title>
    <link href="http://blog.hsatac.net/2013/08/the-art-of-readable-code/"/>
    <updated>2013-08-07T22:07:00+08:00</updated>
    <id>http://blog.hsatac.net/2013/08/the-art-of-readable-code</id>
    <content type="html"><![CDATA[<p>這次公司的讀書分享會我被指定報告這本 <a href="http://shop.oreilly.com/product/9780596802301.do">The Art of Readable Code</a>。</p>

<p><a href="/images/art_of_readable_code/cover.jpg"><img src="/images/art_of_readable_code/cover.jpg" alt="The Art of Readable Code Cover" /></a></p>

<p>這本書我以前就看過英文本，這次借這個機會重新複習整理了一下，又有新的收穫。把一些我覺得比較重要的點筆記下來，太基礎或可能用不太到的這邊就省略了。很推薦各位翻一下這本，是一本很值得一讀的小書。</p>

<!--more-->


<h2>摘要</h2>

<p>可讀性就是易於理解(最短時間理解)。</p>

<p>把寫程式從「會動就好」(寫給機器讀)，提升到「表明自己的意圖」(寫給人讀)的層次。</p>

<p>試著思考，閱讀這段程式的人會用怎樣的脈絡來理解你的程式碼。</p>

<h2>Part 1. 表層改善</h2>

<h3>富含資訊的名稱</h3>

<ul>
<li>選擇詞彙</li>
</ul>


<p><code>FetchPage</code> 比 <code>GetPage</code> 要好，表達出從網路拉資料的行為。</p>

<p>可以使用比 <code>Stop</code> 更清楚的名稱，例如不能復原的用 <code>Kill</code>，能復原的用 <code>Pause</code>, <code>Resume</code>。</p>

<ul>
<li><p>避免使用 tmp, ret, i, j, k (除非真的是要交換變數)</p></li>
<li><p>優先使用具體名稱而非抽象名稱</p></li>
</ul>


<p><code>ServerCanStart</code> 抽象</p>

<p><code>ServerCanListenOnPort</code> 具體</p>

<ul>
<li>在名稱中加入額外資訊</li>
</ul>


<p><code>start</code> => <code>start_ms</code></p>

<p><code>size</code> => <code>size_mb</code></p>

<ul>
<li>加入其他重要屬性</li>
</ul>


<p><code>password</code> => <code>plaintext_password</code></p>

<p><code>comment</code> => <code>unescaped_comment</code></p>

<p>較小範圍適合較短變數名稱</p>

<h3>不被誤解的名稱</h3>

<p><code>Filter()</code> 是包含還是排除？ <code>Select()</code>, <code>Exclude()</code> 更清楚</p>

<p><code>start, stop</code> 有沒有包含？ <code>first, last</code> 清楚表明有包含</p>

<ul>
<li>符合使用者的預期</li>
</ul>


<p><code>get*()</code> 開頭預期是輕量 getter，不要做耗時運算。</p>

<p><code>size()</code> 預期輕量，要計算可改為 <code>computeSize()</code></p>

<h3>美學</h3>

<ul>
<li><p>排版</p></li>
<li><p>有意義的順序</p></li>
</ul>


<p><code>first_name, last_name, email</code></p>

<p><code>first_name, email,...last_name</code></p>

<ul>
<li><p>風格一致性</p></li>
<li><p>區分程式碼段落</p></li>
</ul>


<h3>註解</h3>

<ul>
<li><p>註解自己的想法</p></li>
<li><p>註解程式碼缺陷</p></li>
<li><p>註解常數 (常數的設定通常都有其原因和意義)</p></li>
</ul>


<p><code>NUM_THREADS</code> 可能是根據 CPU 核心數推算出來。</p>

<ul>
<li>為讀者設想(可能需要額外思考)</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="n">NSSet</span> <span class="o">*</span><span class="n">selectedAdvisorIDs</span>  <span class="o">=</span> <span class="n">_filterVC</span><span class="p">.</span><span class="n">selectedAdvisors</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">for</span> <span class="p">(</span><span class="n">MBAdvisor</span> <span class="o">*</span><span class="n">advisor</span> <span class="k">in</span> <span class="p">[</span><span class="n">self</span> <span class="n">currentGroup</span><span class="p">].</span><span class="n">advisors</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">([</span><span class="n">selectedAdvisorIDs</span> <span class="nl">containsObject:</span><span class="n">advisor</span><span class="p">.</span><span class="n">ID</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_filteredAdvisors</span> <span class="nl">addObject:</span><span class="n">advisor</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// 為什麼不直接從 selectedAdvisorIDs 迴圈作處理？</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSNumber</span> <span class="o">*</span><span class="n">advisorID</span> <span class="k">in</span> <span class="n">selectedAdvisorIDs</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="p">[</span><span class="n">_filteredAdvisors</span> <span class="nl">addObject:</span><span class="p">[</span><span class="n">self</span> <span class="nl">findAdvisorByID:</span><span class="n">advisorID</span><span class="p">]];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// 為了維持原本 Advisor 的順序</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>註明可能的陷阱</li>
</ul>


<h3>讓註解精確與簡潔</h3>

<ul>
<li>精確描述函數行為</li>
</ul>


<p><code>傳回檔案行數</code> 可能有很多狀況，改為 <code>計算檔案中 \n 個數</code> 更為精確。</p>

<ul>
<li><p>使用代表性的輸入輸出範例 (rdoc)</p></li>
<li><p>函數參數名稱註解 (named parameters)</p></li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">Connect</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//=&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">Connect</span><span class="p">(</span><span class="n">timeout_ms</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="n">use_encryption</span> <span class="o">=</span> <span class="nb">false</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//=&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">Connect</span><span class="p">(</span><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">timeout_ms</span> <span class="o">=</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span> <span class="mi">10</span><span class="p">,</span> <span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">use_encryption</span> <span class="o">=</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span> <span class="nb">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>使用訊息密集的詞彙</li>
</ul>


<p><code>cache</code>, <code>singleton</code></p>

<h2>Part 2. 簡化迴圈與邏輯</h2>

<h3>提高控制流程與可讀性</h3>

<ul>
<li>if/else 區塊順序

<ol>
<li> 先肯定而非否定的情況</li>
<li> 先簡單的情況</li>
<li> 先<em>有趣</em>或明顯的情況</li>
</ol>
</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">url</span><span class="p">.</span><span class="n">HasQueryParameter</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">expand_all</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;))</span> <span class="p">{</span>     <span class="n">response</span><span class="p">.</span><span class="n">Render</span><span class="p">(</span><span class="n">items</span><span class="p">);</span>     <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;}</span> <span class="k">else</span> <span class="p">{</span>     <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">items</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>         <span class="n">items</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Expand</span><span class="p">();</span>     <span class="p">}</span>     <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;}</span>
</span><span class='line'><span class="c1">// 看到 expand_all 會一直想著 expand_all =&gt;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">url</span><span class="p">.</span><span class="n">HasQueryParameter</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">expand_all</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;))</span> <span class="p">{</span>     <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">items</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>         <span class="n">items</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Expand</span><span class="p">();</span>     <span class="p">}</span>     <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;}</span> <span class="k">else</span> <span class="p">{</span>     <span class="n">response</span><span class="p">.</span><span class="n">Render</span><span class="p">(</span><span class="n">items</span><span class="p">);</span>     <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><p>盡早返回 (return)</p></li>
<li><p>消除迴圈中的巢狀結構 (continue)</p></li>
</ul>


<h3>分解巨大表示式</h3>

<ul>
<li>解釋性變數</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;:</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">root</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;=&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">username</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;:</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'><span class="k">if</span> <span class="n">username</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">root</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>變數與可讀性</h3>

<ul>
<li>消除變數</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">now</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span><span class='line'><span class="n">root_message</span><span class="o">.</span><span class="n">last_view_time</span> <span class="o">=</span> <span class="n">now</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;=&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">root_message</span><span class="o">.</span><span class="n">last_view_time</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>縮減變數範圍</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">sideMenuButton</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'><span class="n">sideMenuButton</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">);</span>
</span><span class='line'><span class="p">[</span><span class="n">sideMenuButton</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">sidemenu_icon</span><span class="p">.</span><span class="n">png</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">sideMenuButton</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="n">toggleRightPanelAction</span><span class="p">)</span> <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">navigationItem</span><span class="p">.</span><span class="n">rightBarButtonItem</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCustomView:</span><span class="n">sideMenuButton</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// =&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// scoped temp variables. last line will be returned.</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">navigationItem</span><span class="p">.</span><span class="n">rightBarButtonItem</span> <span class="o">=</span> <span class="p">({</span>
</span><span class='line'>  <span class="n">UIButton</span> <span class="o">*</span><span class="n">sideMenuButton</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'>  <span class="n">sideMenuButton</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">);</span>
</span><span class='line'>  <span class="p">[</span><span class="n">sideMenuButton</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">sidemenu_icon</span><span class="p">.</span><span class="n">png</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">sideMenuButton</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="n">toggleRightPanelAction</span><span class="p">)</span> <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCustomView:</span><span class="n">sideMenuButton</span><span class="p">];</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>減少變數改變</li>
</ul>


<h2>Part 3. 重新組織程式碼</h2>

<h3>抽離不相關子問題</h3>

<ul>
<li>避免過猶不及</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">user_info</span> <span class="o">=</span> <span class="p">{</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">username</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">password</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">}</span><span class="n">user_str</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">user_info</span><span class="p">)</span><span class="n">cipher</span> <span class="o">=</span> <span class="n">Cipher</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">aes_128_cbc</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">key</span><span class="o">=</span><span class="n">PRIVATE_KEY</span><span class="p">,</span> <span class="n">init_vector</span><span class="o">=</span><span class="n">INIT_VECTOR</span><span class="p">,</span> <span class="n">op</span><span class="o">=</span><span class="n">ENCODE</span><span class="p">)</span><span class="n">encrypted_bytes</span> <span class="o">=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">user_str</span><span class="p">)</span><span class="n">encrypted_bytes</span> <span class="o">+=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">final</span><span class="p">()</span> <span class="c"># flush out the current 128 bit blockurl = &amp;ldquo;&lt;a href=&quot;http://example.com/?user_info=&quot;&gt;http://example.com/?user_info=&lt;/a&gt;&amp;rdquo; + base64.urlsafe_b64encode(encrypted_bytes)</span>
</span><span class='line'><span class="err">…</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;=&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">url_safe_encrypt</span><span class="p">(</span><span class="n">obj</span><span class="p">):</span>  <span class="n">obj_str</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>   <span class="n">cipher</span> <span class="o">=</span> <span class="n">Cipher</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">aes_128_cbc</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">key</span><span class="o">=</span><span class="n">PRIVATE_KEY</span><span class="p">,</span> <span class="n">init_vector</span><span class="o">=</span><span class="n">INIT_VECTOR</span><span class="p">,</span> <span class="n">op</span><span class="o">=</span><span class="n">ENCODE</span><span class="p">)</span> <span class="n">encrypted_bytes</span> <span class="o">=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">obj_str</span><span class="p">)</span>    <span class="n">encrypted_bytes</span> <span class="o">+=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">final</span><span class="p">()</span> <span class="c"># flush out the current 128 bit block return base64.urlsafe_b64encode(encrypted_bytes)user_info = { &amp;ldquo;username&amp;rdquo;: &amp;ldquo;&amp;hellip;&amp;rdquo;, &amp;ldquo;password&amp;rdquo;: &amp;ldquo;&amp;hellip;&amp;rdquo; }url = &amp;ldquo;&lt;a href=&quot;http://example.com/?user_info=&quot;&gt;http://example.com/?user_info=&lt;/a&gt;&amp;rdquo; + url_safe_encrypt(user_info)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;=&gt;</span> <span class="n">this</span> <span class="n">went</span> <span class="n">too</span> <span class="n">far</span><span class="err">…</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">user_info</span> <span class="o">=</span> <span class="p">{</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">username</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">password</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">}</span><span class="n">url</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://example.com/?user_info=&quot;</span><span class="o">&gt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="err">?</span><span class="n">user_info</span><span class="o">=&lt;/</span><span class="n">a</span><span class="o">&gt;&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="n">url_safe_encrypt_obj</span><span class="p">(</span><span class="n">user_info</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">url_safe_encrypt_obj</span><span class="p">(</span><span class="n">obj</span><span class="p">):</span>  <span class="n">obj_str</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>   <span class="k">return</span> <span class="n">url_safe_encrypt_str</span><span class="p">(</span><span class="n">obj_str</span><span class="p">)</span><span class="k">def</span> <span class="nf">url_safe_encrypt_str</span><span class="p">(</span><span class="n">data</span><span class="p">):</span> <span class="n">encrypted_bytes</span> <span class="o">=</span> <span class="n">encrypt</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="k">return</span> <span class="n">base64</span><span class="o">.</span><span class="n">urlsafe_b64encode</span><span class="p">(</span><span class="n">encrypted_bytes</span><span class="p">)</span><span class="k">def</span> <span class="nf">encrypt</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>  <span class="n">cipher</span> <span class="o">=</span> <span class="n">make_cipher</span><span class="p">()</span>  <span class="n">encrypted_bytes</span> <span class="o">=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>   <span class="n">encrypted_bytes</span> <span class="o">+=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">final</span><span class="p">()</span> <span class="c"># flush out any remaining bytes   return encrypted_bytesdef make_cipher():    return Cipher(&amp;ldquo;aes_128_cbc&amp;rdquo;, key=PRIVATE_KEY, init_vector=INIT_VECTOR, op=ENCODE)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>撰寫較少程式碼</h3>

<ul>
<li><p>可讀性最高的程式碼就是完全沒有程式碼</p></li>
<li><p>不開發那些功能 &ndash; 不會需要</p></li>
<li><p>詢問與分解需求</p></li>
<li><p>熟悉你的函式庫</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
