<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | hSATAC]]></title>
  <link href="http://blog.hsatac.net/categories/c/atom.xml" rel="self"/>
  <link href="http://blog.hsatac.net/"/>
  <updated>2013-08-14T16:29:49+08:00</updated>
  <id>http://blog.hsatac.net/</id>
  <author>
    <name><![CDATA[Ash Wu]]></name>
    <email><![CDATA[hsatac@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP openssl_pkey_get_details implement in c]]></title>
    <link href="http://blog.hsatac.net/2012/06/php-openssl-pkey-get-details-implement-in-c/"/>
    <updated>2012-06-14T10:49:00+08:00</updated>
    <id>http://blog.hsatac.net/2012/06/php-openssl-pkey-get-details-implement-in-c</id>
    <content type="html"><![CDATA[<p>It&rsquo;s easy to generate a RSA keypair in PHP, just like this:</p>

<p>```
&lt;?php
// Create the keypair
$res=openssl_pkey_new();</p>

<p>// Get private key
openssl_pkey_export($res, $privkey);</p>

<p>// Get public key
$pubkey=openssl_pkey_get_details($res);
$pubkey=$pubkey[&ldquo;key&rdquo;];
?>
```</p>

<p>But when it comes to C, it&rsquo;s not that simple.</p>

<p>You might want to use <code>RSA_generate_key</code> and then <code>PEM_write_RSAPublicKey</code>, but in fact, the output format of PHP&rsquo;s <code>openssl_pkey_get_details</code> is not a RSA public key.</p>

<p>If you want to get the same result in C, you have to convert your RSA keypair into EVP keypair.</p>

<!--more-->


<p>Here&rsquo;s my sample script:</p>

<p>{% gist 2909583 %}</p>

<p>You can test it by folloing commands:
<code>gcc -o key key.c -lssl &amp;&amp; ./key</code></p>
]]></content>
  </entry>
  
</feed>
